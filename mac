#!/bin/sh

HOMEBREW_PREFIX="/opt/homebrew"

fancy_echo() {
  local fmt="$1"; shift

  # shellcheck disable=SC2059
  printf "\\n$fmt\\n" "$@"
}

alias install_asdf_plugin=add_or_update_asdf_plugin
add_or_update_asdf_plugin() {
  local name="$1"
  local url="$2"

  if ! asdf plugin-list | grep -Fq "$name"; then
    asdf plugin-add "$name" "$url"
  else
    asdf plugin-update "$name"
  fi
}

install_asdf_language() {
  local language="$1"
  local version
  version="$(asdf list-all "$language" | grep -v "[a-z]" | tail -1)"

  if ! asdf list "$language" | grep -Fq "$version"; then
    asdf install "$language" "$version"
    asdf global "$language" "$version"
  fi
}

update_shell() {
  local shell_path;
  shell_path="$(command -v fish)"

  fancy_echo "Changing your shell to fish ..."
  if ! grep "$shell_path" /etc/shells > /dev/null 2>&1 ; then
    fancy_echo "Adding '$shell_path' to /etc/shells"
    sudo sh -c "echo $shell_path >> /etc/shells"
  fi
  sudo chsh -s "$shell_path" "$USER"
}

# shellcheck disable=SC2154
trap 'ret=$?; test $ret -ne 0 && printf "failed\n\n" >&2; exit $ret' EXIT

set -e

if [ ! -d "$HOME/.bin/" ]; then
  mkdir "$HOME/.bin"
fi

if [ -d "$HOMEBREW_PREFIX" ]; then
  if ! [ -r "$HOMEBREW_PREFIX" ]; then
    sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
  fi
else
  sudo mkdir "$HOMEBREW_PREFIX"
  sudo chflags norestricted "$HOMEBREW_PREFIX"
  sudo chown -R "$LOGNAME:admin" "$HOMEBREW_PREFIX"
fi

if ! command -v xcode-select >/dev/null; then
  fancy_echo "Installing CLT ..."
  xcode-select --install
fi

if ! command -v brew >/dev/null; then
  fancy_echo "Installing Homebrew ..."

  /bin/bash -c \
    "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/HEAD/install.sh)"

  echo 'eval "$(/ope/homebrew/bin/brew shellenv)"' >> "$HOME/.zprofile"
  eval "$($HOMEBREW_PREFIX/bin/brew shellenv)"
fi

fancy_echo "Updating Homebrew formulae ..."
brew update --force # https://github.com/Homebrew/brew/issues/1151
brew bundle --file=- <<EOF
tap "universal-ctags/universal-ctags"

# Unix
brew "universal-ctags", args: ["HEAD"]
brew "bat"
brew "diff-so-fancy"
brew "exa"
brew "fd"
brew "fish"
brew "git"
brew "neovim"
brew "procs"
brew "ripgrep"
brew "starship"
brew "stow"
brew "tokei"

# GitHub
brew "gh"

# Programming language prerequisites and package managers
brew "asdf"
brew "gawk"
brew "gpg"
brew "gmp"
brew "php@7.4"  # installing via asdf not working

# Other basic 3rd-party tools
cask "1password"
cask "1password-cli"
cask "aerial"
cask "backblaze"
cask "docker"
cask "transmit"
mas "Amphetamine", id: 937984704
mas "DuckDuckGo Privacy Essentials", id: 1_482_920_575
mas "Kindle", id: 405_399_194
mas "Magnet", id: 441_258_766
mas "Slack", id: 803_453_959
EOF

case "$SHELL" in
  */fish)
    if [ "$(command -v fish)" != "$HOMEBREW_PREFIX/bin/fish" ] ; then
      update_shell
    fi
    ;;
  *)
    update_shell
    ;;
esac

source $HOMEBREW_PREFIX/opt/asdf/asdf.sh
add_or_update_asdf_plugin "nodejs" "https://github.com/asdf-vm/asdf-nodejs.git"
add_or_update_asdf_plugin "python" "https://github.com/danhper/asdf-python.git"
add_or_update_asdf_plugin "ruby" "https://github.com/asdf-vm/asdf-ruby.git"
add_or_update_asdf_plugin "rust" "https://github.com/code-lever/asdf-rust.git"

fancy_echo "Installing latest Node ..."
install_asdf_language "nodejs"

fancy_echo "Installing latest Python ..."
install_asdf_language "python"

fancy_echo "Installing latest Ruby ..."
install_asdf_language "ruby"

fancy_echo "Installing latest Rust ..."
install_asdf_language "rust"
rm -f $HOME/.cargo
ln -s "$(asdf where rust)" $HOME/.cargo

fancy_echo "Linking PHP 7.4 ..."
brew link php@7.4

if ! command -v heroku >/dev/null; then
  # As of 2021-08-04, no Homebrew bottle for Apple Silicon
  fancy_echo "Installing Heroku CLI ..."

  npm install -g heroku
fi

fancy_echo "Updating dotfiles ..."
if [ ! -d "$HOME/Code/dotfiles" ]; then
  gh auth login --web
  gh repo clone jwmayfield/dotfiles "$HOME/Code/dotfiles"
fi
cd "$HOME/Code/dotfiles" && git pull && stow -t $HOME -R */

if [ ! -f "$HOME/.local/share/nvim/site/autoload/plug.vim" ]; then
  fancy_echo "Installing vim-plug ..."

  curl -fLo $HOME/.local/share/nvim/site/autoload/plug.vim --create-dirs \
    https://raw.githubusercontent.com/junegunn/vim-plug/master/plug.vim
fi

fancy_echo "Updating neovim language symlinks ..."
rm -f $HOME/.bin/neovim-node-host
rm -f $HOME/.bin/python
rm -f $HOME/.bin/neovim-ruby-host

"$(asdf which npm)" install -g neovim
"$(asdf which pip)" install neovim
"$(asdf which gem)" install neovim

asdf reshim
ln -s "$(asdf which neovim-node-host)" $HOME/.bin/neovim-node-host
ln -s "$(asdf which python)" $HOME/.bin/python
ln -s "$(asdf which neovim-ruby-host)" $HOME/.bin/neovim-ruby-host

fancy_echo "Updating vim plugins ..."
nvim --headless +PlugUpgrade +qall
nvim --headless +PlugClean! +qall
nvim --headless +PlugUpdate +qall

if [ ! -d "/Applications/Alacritty.app" ]; then
  fancy_echo "Building alacritty ..."

  rm -rf $HOME/Code/alacritty
  git clone git@github.com:alacritty/alacritty.git $HOME/Code/alacritty
  cd $HOME/Code/alacritty
  git checkout arm_ci
  rustup update
  rustup default stable
  rustup target add aarch64-apple-darwin
  rustup target add x86_64-apple-darwin
  cargo check --target=aarch64-apple-darwin
  make dmg-universal
  cp -r target/release/osx/Alacritty.app /Applications/
  rm -rf $HOME/Code/alacritty
fi
